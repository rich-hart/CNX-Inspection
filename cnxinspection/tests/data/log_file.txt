++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
(hist_bhatta_greater_threshhold,1,1) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,1,2) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,1,3) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,1,4) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,1,5) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,1,6) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,1,7) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,2,1) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,2,2) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,2,3) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,2,4) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,2,5) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,2,6) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,2,7) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,3,1) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,3,2) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,3,3) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,3,4) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,3,5) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,3,6) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,3,7) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,4,1) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,4,2) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,4,3) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,4,4) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,4,5) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,4,6) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,4,7) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,5,1) (cases.MyTest) ... FAIL
(hist_bhatta_greater_threshhold,5,2) (cases.MyTest) ... FAIL
(hist_bhatta_greater_threshhold,5,3) (cases.MyTest) ... FAIL
(hist_bhatta_greater_threshhold,5,4) (cases.MyTest) ... FAIL
(hist_bhatta_greater_threshhold,5,5) (cases.MyTest) ... FAIL
(hist_bhatta_greater_threshhold,5,6) (cases.MyTest) ... FAIL
(hist_bhatta_greater_threshhold,5,7) (cases.MyTest) ... FAIL
(hist_bhatta_greater_threshhold,6,1) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,6,2) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,6,3) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,6,4) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,6,5) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,6,6) (cases.MyTest) ... ok
(hist_bhatta_greater_threshhold,6,7) (cases.MyTest) ... ok
(random_test,1,1) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,1,2) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,1,3) (cases.MyTest) ... ok
(random_test,1,4) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,1,5) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,1,6) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,1,7) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,2,1) (cases.MyTest) ... ok
(random_test,2,2) (cases.MyTest) ... ok
(random_test,2,3) (cases.MyTest) ... ok
(random_test,2,4) (cases.MyTest) ... ok
(random_test,2,5) (cases.MyTest) ... ok
(random_test,2,6) (cases.MyTest) ... ok
(random_test,2,7) (cases.MyTest) ... ok
(random_test,3,1) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,3,2) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,3,3) (cases.MyTest) ... ok
(random_test,3,4) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,3,5) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,3,6) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,3,7) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,4,1) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,4,2) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,4,3) (cases.MyTest) ... ok
(random_test,4,4) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,4,5) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,4,6) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,4,7) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,5,1) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,5,2) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,5,3) (cases.MyTest) ... ok
(random_test,5,4) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,5,5) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,5,6) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,5,7) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,6,1) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,6,2) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,6,3) (cases.MyTest) ... ok
(random_test,6,4) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,6,5) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,6,6) (cases.MyTest) ... skipped '**reason skipped**'
(random_test,6,7) (cases.MyTest) ... skipped '**reason skipped**'
######################################################################
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
(hist_corr_greater_threshhold,1,1) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,1,2) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,1,3) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,1,4) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,1,5) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,1,6) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,1,7) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,2,1) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,2,2) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,2,3) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,2,4) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,2,5) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,2,6) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,2,7) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,3,1) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,3,2) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,3,3) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,3,4) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,3,5) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,3,6) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,3,7) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,4,1) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,4,2) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,4,3) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,4,4) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,4,5) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,4,6) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,4,7) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,5,1) (cases.DefaultTest) ... FAIL
(hist_corr_greater_threshhold,5,2) (cases.DefaultTest) ... FAIL
(hist_corr_greater_threshhold,5,3) (cases.DefaultTest) ... FAIL
(hist_corr_greater_threshhold,5,4) (cases.DefaultTest) ... FAIL
(hist_corr_greater_threshhold,5,5) (cases.DefaultTest) ... FAIL
(hist_corr_greater_threshhold,5,6) (cases.DefaultTest) ... FAIL
(hist_corr_greater_threshhold,5,7) (cases.DefaultTest) ... FAIL
(hist_corr_greater_threshhold,6,1) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,6,2) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,6,3) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,6,4) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,6,5) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,6,6) (cases.DefaultTest) ... ok
(hist_corr_greater_threshhold,6,7) (cases.DefaultTest) ... ok
(imgs_equal,1,1) (cases.DefaultTest) ... ok
(imgs_equal,1,2) (cases.DefaultTest) ... FAIL
(imgs_equal,1,3) (cases.DefaultTest) ... FAIL
(imgs_equal,1,4) (cases.DefaultTest) ... FAIL
(imgs_equal,1,5) (cases.DefaultTest) ... FAIL
(imgs_equal,1,6) (cases.DefaultTest) ... FAIL
(imgs_equal,1,7) (cases.DefaultTest) ... FAIL
(imgs_equal,2,1) (cases.DefaultTest) ... FAIL
(imgs_equal,2,2) (cases.DefaultTest) ... ok
(imgs_equal,2,3) (cases.DefaultTest) ... FAIL
(imgs_equal,2,4) (cases.DefaultTest) ... FAIL
(imgs_equal,2,5) (cases.DefaultTest) ... FAIL
(imgs_equal,2,6) (cases.DefaultTest) ... FAIL
(imgs_equal,2,7) (cases.DefaultTest) ... FAIL
(imgs_equal,3,1) (cases.DefaultTest) ... FAIL
(imgs_equal,3,2) (cases.DefaultTest) ... FAIL
(imgs_equal,3,3) (cases.DefaultTest) ... ok
(imgs_equal,3,4) (cases.DefaultTest) ... FAIL
(imgs_equal,3,5) (cases.DefaultTest) ... FAIL
(imgs_equal,3,6) (cases.DefaultTest) ... FAIL
(imgs_equal,3,7) (cases.DefaultTest) ... FAIL
(imgs_equal,4,1) (cases.DefaultTest) ... FAIL
(imgs_equal,4,2) (cases.DefaultTest) ... FAIL
(imgs_equal,4,3) (cases.DefaultTest) ... FAIL
(imgs_equal,4,4) (cases.DefaultTest) ... FAIL
(imgs_equal,4,5) (cases.DefaultTest) ... FAIL
(imgs_equal,4,6) (cases.DefaultTest) ... FAIL
(imgs_equal,4,7) (cases.DefaultTest) ... FAIL
(imgs_equal,5,1) (cases.DefaultTest) ... FAIL
(imgs_equal,5,2) (cases.DefaultTest) ... FAIL
(imgs_equal,5,3) (cases.DefaultTest) ... FAIL
(imgs_equal,5,4) (cases.DefaultTest) ... FAIL
(imgs_equal,5,5) (cases.DefaultTest) ... FAIL
(imgs_equal,5,6) (cases.DefaultTest) ... FAIL
(imgs_equal,5,7) (cases.DefaultTest) ... FAIL
(imgs_equal,6,1) (cases.DefaultTest) ... FAIL
(imgs_equal,6,2) (cases.DefaultTest) ... FAIL
(imgs_equal,6,3) (cases.DefaultTest) ... FAIL
(imgs_equal,6,4) (cases.DefaultTest) ... ok
(imgs_equal,6,5) (cases.DefaultTest) ... ok
(imgs_equal,6,6) (cases.DefaultTest) ... ok
(imgs_equal,6,7) (cases.DefaultTest) ... ok
######################################################################

======================================================================
FAIL: (hist_bhatta_greater_threshhold,5,1) (cases.MyTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 35, in hist_bhatta_greater_threshhold
    self.assertLess(measure,threshold)
AssertionError: 0.4245286982863175 not less than 0.2

======================================================================
FAIL: (hist_bhatta_greater_threshhold,5,2) (cases.MyTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 35, in hist_bhatta_greater_threshhold
    self.assertLess(measure,threshold)
AssertionError: 0.3998968794146558 not less than 0.2

======================================================================
FAIL: (hist_bhatta_greater_threshhold,5,3) (cases.MyTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 35, in hist_bhatta_greater_threshhold
    self.assertLess(measure,threshold)
AssertionError: 0.4232122808086675 not less than 0.2

======================================================================
FAIL: (hist_bhatta_greater_threshhold,5,4) (cases.MyTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 35, in hist_bhatta_greater_threshhold
    self.assertLess(measure,threshold)
AssertionError: 0.4160179999716231 not less than 0.2

======================================================================
FAIL: (hist_bhatta_greater_threshhold,5,5) (cases.MyTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 35, in hist_bhatta_greater_threshhold
    self.assertLess(measure,threshold)
AssertionError: 0.4160179999716231 not less than 0.2

======================================================================
FAIL: (hist_bhatta_greater_threshhold,5,6) (cases.MyTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 35, in hist_bhatta_greater_threshhold
    self.assertLess(measure,threshold)
AssertionError: 0.4160179999716231 not less than 0.2

======================================================================
FAIL: (hist_bhatta_greater_threshhold,5,7) (cases.MyTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 35, in hist_bhatta_greater_threshhold
    self.assertLess(measure,threshold)
AssertionError: 0.4160179999716231 not less than 0.2

======================================================================
FAIL: (hist_corr_greater_threshhold,5,1) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 19, in hist_corr_greater_threshhold
    self.assertGreater(measure,threshold)
AssertionError: 0.9565892968768364 not greater than 0.96

======================================================================
FAIL: (hist_corr_greater_threshhold,5,2) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 19, in hist_corr_greater_threshhold
    self.assertGreater(measure,threshold)
AssertionError: 0.9567862692287287 not greater than 0.96

======================================================================
FAIL: (hist_corr_greater_threshhold,5,3) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 19, in hist_corr_greater_threshhold
    self.assertGreater(measure,threshold)
AssertionError: 0.9565910632256936 not greater than 0.96

======================================================================
FAIL: (hist_corr_greater_threshhold,5,4) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 19, in hist_corr_greater_threshhold
    self.assertGreater(measure,threshold)
AssertionError: 0.9566724921904064 not greater than 0.96

======================================================================
FAIL: (hist_corr_greater_threshhold,5,5) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 19, in hist_corr_greater_threshhold
    self.assertGreater(measure,threshold)
AssertionError: 0.9566724921904064 not greater than 0.96

======================================================================
FAIL: (hist_corr_greater_threshhold,5,6) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 19, in hist_corr_greater_threshhold
    self.assertGreater(measure,threshold)
AssertionError: 0.9566724921904064 not greater than 0.96

======================================================================
FAIL: (hist_corr_greater_threshhold,5,7) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 19, in hist_corr_greater_threshhold
    self.assertGreater(measure,threshold)
AssertionError: 0.9566724921904064 not greater than 0.96

======================================================================
FAIL: (imgs_equal,1,2) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,1,3) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,1,4) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,1,5) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,1,6) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,1,7) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,2,1) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,2,3) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,2,4) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,2,5) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,2,6) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,2,7) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,3,1) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,3,2) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,3,4) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,3,5) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,3,6) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,3,7) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,4,1) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,4,2) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,4,3) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,4,4) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,4,5) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,4,6) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,4,7) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,5,1) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,5,2) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,5,3) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,5,4) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,5,5) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,5,6) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,5,7) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,6,1) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,6,2) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

======================================================================
FAIL: (imgs_equal,6,3) (cases.DefaultTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/vagrant/development/CNX-Inspection/cnxinspection/cases.py", line 12, in imgs_equal
    self.assertTrue(numpy.array_equal(self.img_i,self.img_j))
AssertionError: False is not true

----------------------------------------------------------------------
Ran 168 tests in 1.556s

FAILED (failures=49, skipped=30)
